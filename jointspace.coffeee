# #Plugin template

module.exports = (env) ->

  # Require the  bluebird promise library
  Promise = env.require 'bluebird'
  # Require the [cassert library](https://github.com/rhoot/cassert).
  assert = env.require 'cassert'

  http = env.require 'http'

  # Create a class that extends the Plugin class and implements the following functions:
  class JointSpace extends env.plugins.Plugin


     

    init: (app, @framework, config) =>
      deviceConfigDef = require("./device-config-schema")

      @framework.deviceManager.registerDeviceClass("JointSpaceDevice", {
        configDef: deviceConfigDef.JointSpaceDevice, 
        createCallback: (config) => new JointSpaceDevice(config)
      })

      @framework.deviceManager.on('discover', (eventData) =>
        @framework.deviceManager.discoverMessage(
            'jointspace', "Scanning for jointspace devices..."
          )
        Client = require('node-ssdp').Client
        client = new Client
        client.on 'response', (headers, statusCode, rinfo) ->
            json = JSON.parse headers
            options = 
                host: '10.10.10.4'
                path: '/nmrDescription.xml'
                port: '49153'
                headers: 'pimatic': 'pimatic header' 
            if json.ST.match(/upnp:rootdevice/i) and json.SERVER.match(/PhilipsIntelSDK/i)
                env.logger.info('jointspace: Device Found: %j', deviceInfo.friendlyName)
                req = http.request options, ->

                    config = {
                        class: 'JointSpaceDevice',
                        name: deviceInfo.friendlyName,
                        host: deviceInfo.host,
                        #port: deviceInfo.port
                    }
                    
                    @framework.deviceManager.discoveredDevice(
                                'jointpsace', "Presence of '#{deviceInfo.friendlyName}'", config
                                )
                    return
            return

  class JointSapceDevice extends env.devices.Device
    constructor: (@config) ->
      @name = @config.name
      @id = @config.id
      env.logger.info("JointSpace: Device created!: "+@config.host+":"+@config.port)
      @getState()
      super()

    destroy: ->
            super()
  # ###Finally
  # Create a instance of my plugin
  jspace = new JointSpace
  # and return it to the framework.
  return jspace
